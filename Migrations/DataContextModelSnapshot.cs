// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_cyberpunk_challenge_5.Models;

#nullable disable

namespace dotnet_cyberpunk_challenge_5.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.ArasakaCluster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("clusterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cpuCores")
                        .HasColumnType("int");

                    b.Property<string>("creationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("environment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kubernetesVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("memoryGb")
                        .HasColumnType("int");

                    b.Property<int>("nodeCount")
                        .HasColumnType("int");

                    b.Property<string>("region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("storageTb")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ArasakaClusters");
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.AthenaDataEvent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("appName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("appVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("deviceId")
                        .HasColumnType("int");

                    b.Property<string>("deviceModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("errorCode")
                        .HasColumnType("int");

                    b.Property<string>("errorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eventTimestamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ipAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("macAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("osVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("responseTime")
                        .HasColumnType("int");

                    b.Property<string>("severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("success")
                        .HasColumnType("bit");

                    b.Property<string>("userAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("deviceId");

                    b.ToTable("AthenaDataEvents");
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.Device", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("ArasakaClusterid")
                        .HasColumnType("int");

                    b.Property<string>("architecture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("athenaAccessKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("clusterId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("processorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publicKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ArasakaClusterid");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.MemoryMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("deviceId")
                        .HasColumnType("int");

                    b.Property<bool>("memoryEccSupport")
                        .HasColumnType("bit");

                    b.Property<string>("memoryFormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("memoryHeatSpreader")
                        .HasColumnType("bit");

                    b.Property<int>("memoryLatency")
                        .HasColumnType("int");

                    b.Property<float>("memorySizeGb")
                        .HasColumnType("real");

                    b.Property<int>("memorySpeedMhz")
                        .HasColumnType("int");

                    b.Property<string>("memoryTechnology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("memoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("memoryVoltage")
                        .HasColumnType("real");

                    b.Property<int>("memoryWarrantyYears")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("deviceId");

                    b.ToTable("MemoryMappings");
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.Process", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("deviceId")
                        .HasColumnType("int");

                    b.Property<string>("family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("memory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("openFiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("deviceId");

                    b.ToTable("Processs");
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.AthenaDataEvent", b =>
                {
                    b.HasOne("dotnet_cyberpunk_challenge_5.Models.Device", null)
                        .WithMany("dataEvents")
                        .HasForeignKey("deviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.Device", b =>
                {
                    b.HasOne("dotnet_cyberpunk_challenge_5.Models.ArasakaCluster", null)
                        .WithMany("devices")
                        .HasForeignKey("ArasakaClusterid");
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.MemoryMapping", b =>
                {
                    b.HasOne("dotnet_cyberpunk_challenge_5.Models.Device", null)
                        .WithMany("memoryMappings")
                        .HasForeignKey("deviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.Process", b =>
                {
                    b.HasOne("dotnet_cyberpunk_challenge_5.Models.Device", null)
                        .WithMany("processes")
                        .HasForeignKey("deviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.ArasakaCluster", b =>
                {
                    b.Navigation("devices");
                });

            modelBuilder.Entity("dotnet_cyberpunk_challenge_5.Models.Device", b =>
                {
                    b.Navigation("dataEvents");

                    b.Navigation("memoryMappings");

                    b.Navigation("processes");
                });
#pragma warning restore 612, 618
        }
    }
}
